{:name            "probematic"
 :environment     #profile {:prod #or [#env APP_ENVIRONMENT "prod"]
                            :dev  "dev"
                            :demo "demo"
                            :test "test"}
 :secrets         #include "../secrets.edn"
 :discourse       {:api-key  #ref [:secrets :discourse :api-key]
                   :username #ref [:secrets :discourse :username]}
 :nextcloud       {:password         #ref [:secrets :nextcloud :password]
                   :username         #ref [:secrets :nextcloud :username]
                   :token            #ref [:secrets :nextcloud :token]
                   :host             #ref [:secrets :nextcloud :host]
                   :webdav-base-path #ref [:secrets :nextcloud :webdav-base-path]}
 :airtable        {:token                    #ref [:secrets :airtable :token]
                   :base                     #ref [:secrets :airtable :base]
                   :all-people-table         {:name "People" :view "All People"}
                   :gigo-linked-people-table {:name "People" :view "Gigo Linked"}
                   :gigo-table               {:name "Gigo" :view "All"}}
 :gigo            {:username #ref [:secrets :gigo :username]
                   :password #ref [:secrets :gigo :password]}
 :twilio          {:bot-number     #ref [:secrets :twilio :bot-number]
                   :twilio-account #ref [:secrets :twilio :twilio-account]
                   :twilio-token   #ref [:secrets :twilio :twilio-token]}
 :sentry          {:dsn #ref [:secrets :sentry :dsn]}
 :auth            {:cert-filename "keycloak-realm.crt"
                   :known-roles   #{:admin :Mitglieder}}
 :max-header-size 10000
 :ig/system       {:app.ig/profile          #profile {:prod :prod
                                                      :dev  :dev
                                                      :demo :demo
                                                      :test :test}
                   :app.ig/env              {:profile #ig/ref :app.ig/profile}
                   :app.ig/pedestal         {:i18n-langs #ig/ref :app.ig/i18n-langs
                                             :service    {:io.pedestal.http/type           :jetty
                                                          :io.pedestal.http/routes         []
                                                          :io.pedestal.http/port           #long #or [#env WEBSITES_PORT #profile {:dev 6161 :test 6162} 6160]
                                                          :io.pedestal.http/host           #or [#env HTTP_BIND_HOST "localhost"]
                                        ;:io.pedestal.http/resource-path "/static"
                                                          :io.pedestal.http/join?          false
                                                          :io.pedestal.http/secure-headers {:content-security-policy-settings {:img-src     "https://*.streetnoise.at 'self' data:;"
                                                                                                                               :object-src  "'none';"
                                                                                                                               :default-src "'self';"
                                                                                                                               :font-src    "'self' https://rsms.me;"
                                                                                                                               :script-src  "'self' 'unsafe-inline' 'unsafe-eval';"
                                                                                                                               :style-src   "'self' 'unsafe-inline' https://rsms.me;"
                                                                                                                               :connect-src "'self'"}}}
                                             :env        #ig/ref :app.ig/env
                                             :profile    #ig/ref :app.ig/profile
                                             :routes     #ig/ref :app.ig.router/routes
                                             :handler    #ig/ref :app.ig/handler}
                   :app.ig/handler          {:env        #ig/ref :app.ig/env}
                   :app.ig.router/routes    {:routes     #ig/refset :app.ig/routes
                                             :i18n-langs #ig/ref :app.ig/i18n-langs
                                             :datomic    #ig/ref :app.ig/datomic-db
                                             :webdav     #ig/ref :app.ig/webdav-sardine
                                             :env        #ig/ref :app.ig/env}
                   :ol.ig/jobs              {:job-defs   #ig/ref :app.ig.jobs/definitions
                                             :env        #ig/ref :app.ig/env}
                   :app.ig/gigo-client      {:env        #ig/ref :app.ig/env}
                   :app.ig/sentry           {:env        #ig/ref :app.ig/env}
                   :app.ig/datomic-db       {:server-type :dev-local
                                             :system      "dev"
                                             :db-name     "probematic"
                                             :env         #ig/ref :app.ig/env
                                             :storage-dir #or [#env DATOMIC_DB
                                                               #profile {:dev  #envf ["%s/datomic.data" PWD]
                                                                         :test #envf ["%s/datomic.test.data" PWD]
                                                                         :demo #envf ["%s/datomic.demo.data" PWD]}]}
                   :app.ig/i18n-langs       {}
                   :app.ig/webdav-sardine   {:env #ig/ref :app.ig/env}
                   :app.ig.jobs/definitions {:env     #ig/ref :app.ig/env
                                             :gigo    #ig/ref :app.ig/gigo-client
                                             :datomic #ig/ref :app.ig/datomic-db}}
 :jobs            {:job/sync-gigs       {:job/frequency     [10 :minutes]
                                         :job/initial-delay [2 :seconds]}
                   :job/sync-members    {:job/frequency     [1 :hours]
                                         :job/initial-delay [3 :seconds]}
                   :job/update-airtable {:job/frequency     [1 :hours]
                                         :job/initial-delay [2 :seconds]}}}
